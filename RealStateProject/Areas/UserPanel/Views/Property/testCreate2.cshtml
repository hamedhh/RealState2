@model DataLayer.ViewModels.CreatePropertyViewModel
@using DataLayer.DB



<link href="~/Areas/UserPanel/Content/CustomPanel.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="row">
        <div class="col-md-8">
            <div class="form-horizontal">

                <div class="form-group">
                    @Html.LabelFor(model => model.PropertyTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("PropertyTypeID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PropertyTypeID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CountryID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CountryID", null, htmlAttributes: new { @class = "form-control", @id = "drpCountry" })
                        @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CityID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CityID", new SelectList(string.Empty), "انتخاب شهر", htmlAttributes: new { @class = "form-control", @id = "drpCity" })
                        @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.rigionID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("rigionID", new SelectList(string.Empty), "انتخاب محله", htmlAttributes: new { @class = "form-control", @id = "drpRigion" })
                        @Html.ValidationMessageFor(model => model.rigionID, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.usageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("usageID", null, htmlAttributes: new { @class = "form-control", @id = "drpUsage" })
                        @Html.ValidationMessageFor(model => model.usageID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SubUsageID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("SubUsageID", new SelectList(string.Empty), "انتخاب نوع واحد", htmlAttributes: new { @class = "form-control", @id = "drpSubUsage" })
                        @Html.ValidationMessageFor(model => model.SubUsageID, "", new { @class = "text-danger" })
                    </div>
                </div>




                <div class="form-group">
                    @Html.LabelFor(model => model.HomePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HomePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MortgagePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MortgagePrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MortgagePrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RentPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RentPrice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RentPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocArea, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocArea, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocArea, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LocAge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LocAge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LocAge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>


            </div>
        </div>
        <div class="col-md-4">
            @{
                List<Facility> _facility = ViewBag.Facilities;
            }

                <div class="container form-control">
                    <ul class="ks-cboxtags">

                        @foreach (var item in _facility)
                        {

                            @*<input type="checkbox" id="Check_@item.FacilityID" value="">
                            <label class="" for="Check_@item.FacilityID">
                                @item.FacilityTitle
                            </label>*@
                            <li><input type="checkbox" id="Check_@item.FacilityID" value="@item.FacilityID"><label for="Check_@item.FacilityID">@item.FacilityTitle</label></li>
                        }

                    </ul>

                </div>

        </div>
    </div>
}



<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });

        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
        //if ($('#drpCity').val() != null) {
        //    $('#drpRigion option').remove();
        //    $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
        //        function (data) {
        //            $.each(data, function () {
        //                $('#drpRigion').append('<option value=' +
        //                    this.RigionID + '>' + this.RegionTitle + '</option>');
        //            });
        //        }).fail(function (jqXHR, textStatus, errorThrown) {
        //            alert('Error getting Rigion!');
        //        });
        //}

    });



</script>

<script type="text/javascript">
    $('#drpCountry').change(function () {
        $('#drpCity option').remove();
        $.getJSON('/UserPanel/Property/FindCity', { id: $('#drpCountry').val() }, function (data) {
            $.each(data, function () {
                $('#drpCity').append('<option value=' +
                    this.CityID + '>' + this.CityTitle + '</option>');
            });
        }).fail(function (jqXHR, textStatus, errorThrown) {
            alert('Error getting city!');
        });
    });

</script>

<script type="text/javascript">
    $('#drpCity').change(function () {
        $('#drpRigion option').remove();
        $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpRigion').append('<option value=' +
                        this.RigionID + '>' + this.RegionTitle + '</option>');
                });
            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });

    });
</script>

<script>
    $('#drpUsage').change(function () {
        $('#drpSubUsage option').remove();
        $.getJSON('/UserPanel/Property/FindSubUsage', { id: $('#drpUsage').val() },
            function (data) {
                $.each(data, function () {
                    $('#drpSubUsage').append('<option value=' +
                        this.SubUsageID + '>' + this.SubUsageTitle + '</option>');
                });

            }).fail(function (jqXHR, textStatus, errorThrown) {
                alert('Error getting Rigion!');
            });
    });
</script>
@*<script type="text/javascript">
        $(window).bind('load', function () {
            $('#drpRigion option').remove();
            $.getJSON('/UserPanel/Property/FindRigion', { id: $('#drpCity').val() },
                function (data) {
                    $.each(data, function () {
                        $('#drpRigion').append('<option value=' +
                            this.RigionID + '>' + this.RegionTitle + '</option>');
                    });
                }).fail(function (jqXHR, textStatus, errorThrown) {
                    alert('Error getting Rigion!');
                });
        });
    </script>*@


